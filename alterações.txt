int OnInit()
  {

//--- Seta o magic number do robô
   trade.SetExpertMagicNumber(magicrobo);

   ArraySetAsSeries(candle,true);//

//--- Criação das structs de tempo
   TimeToStruct(StringToTime(inicio),horario_inicio);
   TimeToStruct(StringToTime(termino),horario_termino);
//   TimeToStruct(StringToTime(fechamento),horario_fechamento);
   TimeToStruct(StringToTime(pausainicio1),horario_inicio_pausa1);
   TimeToStruct(StringToTime(pausatermino1),horario_termino_pausa1);
   TimeToStruct(StringToTime(pausainicio2),horario_inicio_pausa2);
   TimeToStruct(StringToTime(pausatermino2),horario_termino_pausa2);
   SocketConnect(socketneural,endereco,porta,1000);
   ReadFileToDictCSV("previsoes.csv");

   return(INIT_SUCCEEDED);
  }


void OnDeinit(const int reason)
  {
//---
   ChartIndicatorDelete(0,1,shortname);

// Motivo da desinicialização do EA
   printf("Deinit reason: %d", reason);
   SocketClose(socketneural);
  }


 open1  = DoubleToString(candle[2].open,5);
         open2  = DoubleToString(candle[1].open,5);
         low1   = DoubleToString(candle[2].low,5);
         low2   = DoubleToString(candle[1].low,5);
         high1  = DoubleToString(candle[2].high,5);
         high2  = DoubleToString(candle[1].high,5);
         close1 = DoubleToString(candle[2].close,5);
         close2 = DoubleToString(candle[1].close,5);

         envioneural = open1+","+low1+","+high1+","+close1+","+open2+","+low2+","+high2+","+close2;
         Print(socketneural);
         if(socketneural!=INVALID_HANDLE)
           {
            Print("Confirmação de soquete criado, este é o número dele: ",socketneural);
            if(SocketIsConnected(socketneural))
              {
               enviado = socksend(socketneural,envioneural);
               Alert("Dados enviados: ",envioneural);
              }
            else
               Print("Falhou conexão a ",endereco,":",porta,", erro ",GetLastError());

            Sleep(300);
            if(SocketIsConnected(socketneural))
              {
               recebido = socketreceive(socketneural,1000);
               Print("Dados recebidos: ",recebido);
              }
            else
               Print("soquete para recebimento não conectado!");

         
           }






